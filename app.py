import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from io import BytesIO
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer, Table
from reportlab.lib.pagesizes import A4
from reportlab.lib.styles import getSampleStyleSheet
from reportlab.lib.units import inch

# --- Streamlit page config ---
st.set_page_config(page_title="MPT Diversification â€“ Two Securities", layout="wide")

st.title("ðŸ“ˆ Diversification of Risk â€“ Modern Portfolio Theory (MPT)")

st.markdown("""
Enter or edit **5 years of annual returns (%)** for two securities **S** and **T**.  
Then calculate portfolio risk and return following the layout of *Watson & Head (2023) Table 8.3*.
""")

# --- Default dataset (Watson & Head example logic) ---
default_data = pd.DataFrame({
    "S": [10.8, 11.2, 9.6, 10.4, 12.0],
    "T": [5.0, 5.4, 4.8, 5.2, 5.6]
})

# --- Step 1: Input Data ---
st.subheader("Step 1 â€“ Input Data")
use_default = st.checkbox("Use default sample data (Watson & Head style)", value=True)

if use_default:
    df = default_data.copy()
else:
    st.write("Edit the spreadsheet below:")
    df = st.data_editor(
        pd.DataFrame({"S": [None]*5, "T": [None]*5}),
        num_rows="fixed",
        use_container_width=True
    )

# --- Step 2: Run Analysis ---
if st.button("Run Analysis", type="primary"):
    df = df.dropna()
    df = df.astype(float) / 100  # convert % to decimal

    mean_s, mean_t = df["S"].mean(), df["T"].mean()
    sd_s, sd_t = df["S"].std(ddof=0), df["T"].std(ddof=0)
    corr = df["S"].corr(df["T"])
    r_squared = corr ** 2

    st.success("âœ… Calculation complete.")

    # --- Summary Statistics Table ---
    st.subheader("Summary Statistics")
    summary = pd.DataFrame({
        "Mean Return": [mean_s, mean_t],
        "Standard Deviation": [sd_s, sd_t]
    }, index=["S", "T"])

    st.dataframe(
        summary.style.format("{:.2%}")
        .set_table_styles([
            {'selector': 'th', 'props': [('text-align', 'center'), ('font-weight', 'bold')]},
            {'selector': 'td', 'props': [('text-align', 'center')]}
        ]),
        use_container_width=True
    )

    st.metric("Coefficient of Determination (rÂ²)", f"{r_squared:.2f}")

    # --- Portfolio Weights (Watson & Head pattern) ---
    weights = [(1.0, 0.0), (0.8, 0.2), (0.6, 0.4), (0.4, 0.6), (0.2, 0.8), (0.0, 1.0)]
    labels = ["All S (100/0)", "A (80/20)", "B (60/40)", "C (40/60)", "D (20/80)", "All T (0/100)"]

    results = []
    for (w_s, w_t), label in zip(weights, labels):
        port_return = w_s * mean_s + w_t * mean_t
        port_var = w_s**2 * sd_s**2 + w_t**2 * sd_t**2 + 2*w_s*w_t*sd_s*sd_t*corr
        port_sd = np.sqrt(port_var)
        results.append([label, port_return*100, port_sd*100])

    table_df = pd.DataFrame(results, columns=["Portfolio", "Mean Return (%)", "Standard Deviation (%)"])

    # --- Portfolio Table (Watson & Head layout) ---
    st.subheader("Portfolio Risk and Return Table (Table 8.3 Format)")
    st.dataframe(
        table_df.style.format("{:.2f}")
        .set_table_styles([
            {'selector': 'th', 'props': [('text-align', 'center'), ('font-weight', 'bold')]},
            {'selector': 'td', 'props': [('text-align', 'center')]}
        ]),
        use_container_width=True
    )

    # --- Efficient Frontier Plot ---
    st.subheader("Efficient Frontier Graph")
    fig, ax = plt.subplots(figsize=(7,5))
    ax.plot(table_df["Standard Deviation (%)"], table_df["Mean Return (%)"], marker='o')
    for i, row in table_df.iterrows():
        ax.annotate(row["Portfolio"], (row["Standard Deviation (%)"], row["Mean Return (%)"]), fontsize=8)
    ax.set_xlabel("Risk (Standard Deviation %)")
    ax.set_ylabel("Expected Return (%)")
    ax.grid(True)
    st.pyplot(fig)

    # --- PDF Report ---
    st.subheader("Download Report")
    if st.button("Generate 1-Page PDF Report"):
        buffer = BytesIO()
        doc = SimpleDocTemplate(buffer, pagesize=A4)
        styles = getSampleStyleSheet()
        story = [
            Paragraph("Diversification of Risk â€“ Modern Portfolio Theory (MPT)", styles["Title"]),
            Spacer(1, 12),
            Paragraph(f"Coefficient of Determination (rÂ²): {r_squared:.2f}", styles["Normal"]),
            Spacer(1, 12),
            Paragraph("Portfolio Risk and Return (Table 8.3 Format):", styles["Heading3"])
        ]

        data = [["Portfolio", "Mean Return (%)", "Standard Deviation (%)"]] + \
            [[p, f"{r:.2f}", f"{s:.2f}"] for p, r, s in results]

        story.append(Table(data))
        story.append(Spacer(1, 0.2*inch))
        story.append(Paragraph(
            "Generated by AI and verified by Alastair McBride for educational use.",
            styles["Italic"]
        ))
        doc.build(story)

        st.download_button("Download PDF", buffer.getvalue(), "MPT_Report.pdf", "application/pdf")
